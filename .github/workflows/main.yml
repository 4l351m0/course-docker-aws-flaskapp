name: CI/CD Docker a EC2

on:
  push:
    branches:
      - main

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and Push Docker Image
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/mi-app-flask:latest .
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/mi-app-flask:latest

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-2

      # --- Paso 5: Crear Contenido del Script de Instalación de Docker (Base64) ---
      - name: Create Docker Install Script Content (Base64)
        id: install_script_content
        run: |
          read -r -d '' SCRIPT_CONTENT <<'EOF_SCRIPT' || true
          #!/bin/bash
          echo "Iniciando instalación de Docker..."
          sudo apt-get update -y
          sudo apt-get install -y docker.io
          sudo systemctl start docker
          sudo systemctl enable docker
          sudo usermod -aG docker ubuntu
          sudo systemctl restart docker
          echo "Instalación de Docker completada."
          EOF_SCRIPT
          BASE64_SCRIPT=$(echo "$SCRIPT_CONTENT" | base64 -w 0)
          echo "::set-output name=base64_script::$BASE64_SCRIPT"

      # --- Paso 6: Ejecutar Script de Instalación de Docker vía SSM (Base64) ---
      - name: Execute Docker Install Script via SSM (Base64)
        run: |
          BASE64_SCRIPT_CONTENT="${{ steps.install_script_content.outputs.base64_script }}"
          aws ssm send-command \
            --document-name "AWS-RunShellScript" \
            --instance-ids i-0a59861bcbc05c3ef \
            --parameters commands='["echo \"'$BASE64_SCRIPT_CONTENT'\" | base64 -d | bash"]' \
            --region us-east-2 \
            --comment "Install Docker via Base64 script"

      # --- Paso 7: Obtener Nombre de Usuario de Docker Hub en Minúsculas ---
      - name: Get Lowercase Docker Hub Username
        id: get_lower_username
        run: echo "::set-output name=lower_username::$(echo "${{ secrets.DOCKERHUB_USERNAME }}" | tr '[:upper:]' '[:lower:]')"

      # --- Paso 8: Crear Contenido del Script de Despliegue (Base64) ---
      - name: Create Deploy Script Content (Base64)
        id: deploy_script_content
        run: |
          LOWER_USERNAME="${{ steps.get_lower_username.outputs.lower_username }}"
          read -r -d '' SCRIPT_CONTENT <<'EOF_SCRIPT' || true
          #!/bin/bash
          CONTAINER_NAME="my-flask-app-container"
          IMAGE_NAME="$LOWER_USERNAME/mi-app-flask:latest"
          echo "Deteniendo y eliminando contenedor existente (\$CONTAINER_NAME)..."
          docker stop \$CONTAINER_NAME > /dev/null 2>&1 || true
          docker rm \$CONTAINER_NAME > /dev/null 2>&1 || true
          echo "Contenedor existente detenido/eliminado."
          echo "Jalando la última imagen de Docker Hub (\$IMAGE_NAME)..."
          docker pull \$IMAGE_NAME
          echo "Imagen jalada."
          echo "Ejecutando nuevo contenedor (\$CONTAINER_NAME)..."
          docker run -d --name \$CONTAINER_NAME -p 80:5000 \$IMAGE_NAME
          echo "Nuevo contenedor en ejecución."
          echo "Despliegue completado."
          EOF_SCRIPT
          BASE64_SCRIPT=$(echo "$SCRIPT_CONTENT" | base64 -w 0)
          echo "::set-output name=base64_script::$BASE64_SCRIPT"

      # --- Paso 9: Ejecutar Script de Despliegue vía SSM (Base64) ---
      - name: Execute Deploy Script via SSM (Base64)
        run: |
          BASE64_SCRIPT_CONTENT="${{ steps.deploy_script_content.outputs.base64_script }}"
          aws ssm send-command \
            --document-name "AWS-RunShellScript" \
            --instance-ids i-0a59861bcbc05c3ef \
            --parameters commands='["echo \"'$BASE64_SCRIPT_CONTENT'\" | base64 -d | bash"]' \
            --region us-east-2 \
            --comment "Execute deploy via Base64 script"

